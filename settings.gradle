pluginManagement {
    includeBuild('build-logic')
}

// The name of the root project.
// If we would not set the name, then gradle would use the directory
// name of the root directory
rootProject.name = 'Smack'

def readVersionFile() {
	def versionFile = new File(rootDir, 'version')
	if (!versionFile.isFile()) {
		throw new Exception("Could not find version file")
	}
	if (versionFile.text.isEmpty()) {
		throw new Exception("Version file does not contain a version")
	}
	versionFile.text.trim()
}
def version = readVersionFile()
gradle.ext.set('version', version)
gradle.beforeProject { project ->
    project.version = gradle.ext.version
}

include 'smack-core',
		'smack-im',
		'smack-tcp',
		'smack-examples',
		'smack-extensions',
		'smack-experimental',
		'smack-debug',
		'smack-debug-slf4j',
		'smack-resolver-dnsjava',
		'smack-resolver-minidns',
		'smack-resolver-minidns-dox',
		'smack-resolver-javax',
		'smack-sasl-javax',
		'smack-sasl-provided',
		'smack-streammanagement',
		'smack-legacy',
		'smack-jingle-old',
		'smack-bosh',
		'smack-android',
		'smack-android-extensions',
		'smack-java11',
		'smack-java11-full',
		'smack-integration-test',
		'smack-omemo',
		'smack-omemo-signal',
		'smack-omemo-signal-integration-test',
		'smack-repl',
		'smack-openpgp',
		'smack-websocket',
		'smack-websocket-okhttp',
		'smack-websocket-java11',
		'smack-xmlparser',
		'smack-xmlparser-stax',
		'smack-xmlparser-xpp3'
